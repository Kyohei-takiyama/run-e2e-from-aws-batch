name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-2
  ECR_REPO_NAME: run-e2e-from-aws-batch-repository

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # tag: GITHUB_REF##*/=v1.0.0
      - name: Create tag
        id: create-tag
        run: |
          if [[ "${GITHUB_REF##*/}" == v* ]]; then
              TAG="${GITHUB_REF##*/}"
          else
              TAG="v$(date +%Y%m%d)-${GITHUB_SHA::8}"
          fi

          if [[ -z "$TAG" ]]; then
              echo "Error: TAG is empty."
              exit 1
          fi

          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

        # docker/build-push-action@v5の処理でbuildxに依存しているため、前段でこのactionsを実行
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ここでのcontextはCheckoutされたトップディレクトリを参照しているため、Dockerfileがあるディレクトリを指定
      - name: Build and push image
        uses: docker/build-push-action@v5
        id: build-image
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ steps.create-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          platforms: linux/amd64,linux/arm64
